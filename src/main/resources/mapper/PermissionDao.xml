<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"  "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="user.zc.dao.base.PermissionDao" ><!-- 查询字段 --><sql id="columnList" >	p.id,	 p.name, p.alias, p.url, p.createBy, p.createTime, p.updateBy, p.updateTime, p.version, p.isDeleted, p.parentId, p.type, p.sort, p.depth, p.platform, p.description, p.status</sql><!--通过id集合in查询--><sql id="inClause">    <if test="column!=null">        <if test="ids==null">            and 1=0        </if>        <if test="ids!=null">            <if test="ids.size>0">                and  p.${column} in                <foreach item="items" index="index" collection="ids" open="(" separator="," close=")">                    #{items}                </foreach>            </if>            <if test="ids.size==0">                and 1=0            </if>        </if>    </if></sql><!-- 查询条件 --><sql id="whereClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and p.id = #{condition.id}	</if>	<if test="condition.name != null" >and  p.name = #{condition.name}</if><if test="condition.alias != null" >and  p.alias = #{condition.alias}</if><if test="condition.url != null" >and  p.url = #{condition.url}</if><if test="condition.createBy != null" >and  p.createBy = #{condition.createBy}</if><if test="condition.createTime != null" >and  p.createTime = #{condition.createTime}</if><if test="condition.updateBy != null" >and  p.updateBy = #{condition.updateBy}</if><if test="condition.updateTime != null" >and  p.updateTime = #{condition.updateTime}</if><if test="condition.version != null" >and  p.version = #{condition.version}</if><if test="condition.isDeleted != null" >and  p.isDeleted = #{condition.isDeleted}</if><if test="condition.parentId != null" >and  p.parentId = #{condition.parentId}</if><if test="condition.type != null" >and  p.type = #{condition.type}</if><if test="condition.sort != null" >and  p.sort = #{condition.sort}</if><if test="condition.depth != null" >and  p.depth = #{condition.depth}</if><if test="condition.platform != null" >and  p.platform = #{condition.platform}</if><if test="condition.description != null" >and  p.description = #{condition.description}</if><if test="condition.status != null" >and  p.status = #{condition.status}</if></trim><include refid="inClause"/></sql><!-- 模糊查询条件 --><sql id="whereLikeClause">where 1=1<trim  suffixOverrides="," >	<if test="condition.id != null" >	    and p.id = #{condition.id}	</if>													 			<if test="condition.name != null" >and  UPPER(p.name) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.name}),'%'))</if><if test="condition.alias != null" >and  UPPER(p.alias) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.alias}),'%'))</if><if test="condition.url != null" >and  UPPER(p.url) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.url}),'%'))</if><if test="condition.createBy != null" >and  UPPER(p.createBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createBy}),'%'))</if><if test="condition.createTime != null" >and  UPPER(p.createTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.createTime}),'%'))</if><if test="condition.updateBy != null" >and  UPPER(p.updateBy) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateBy}),'%'))</if><if test="condition.updateTime != null" >and  UPPER(p.updateTime) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.updateTime}),'%'))</if><if test="condition.version != null" >and  UPPER(p.version) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.version}),'%'))</if><if test="condition.isDeleted != null" >and  UPPER(p.isDeleted) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.isDeleted}),'%'))</if><if test="condition.parentId != null" >and  UPPER(p.parentId) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.parentId}),'%'))</if><if test="condition.type != null" >and  UPPER(p.type) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.type}),'%'))</if><if test="condition.sort != null" >and  UPPER(p.sort) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.sort}),'%'))</if><if test="condition.depth != null" >and  UPPER(p.depth) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.depth}),'%'))</if><if test="condition.platform != null" >and  UPPER(p.platform) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.platform}),'%'))</if><if test="condition.description != null" >and  UPPER(p.description) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.description}),'%'))</if><if test="condition.status != null" >and  UPPER(p.status) LIKE   UPPER(CONCAT(CONCAT('%',#{condition.status}),'%'))</if></trim><include refid="inClause"/></sql><!-- 插入记录 --><insert id="add"  >  insert into permission (id,name,alias,url,createBy,createTime,updateBy,updateTime,version,isDeleted,parentId,type,sort,depth,platform,description,status)  values(#{id,jdbcType=VARCHAR},#{name},#{alias},#{url},#{createBy},#{createTime},#{updateBy},#{updateTime},#{version},#{isDeleted},#{parentId},#{type},#{sort},#{depth},#{platform},#{description},#{status})</insert><!-- 修改记录，只修改只不为空的字段 --><update id="update" >	update permission set	<trim  suffixOverrides="," >	<if test="name != null ">name=#{name},</if><if test="alias != null ">alias=#{alias},</if><if test="url != null ">url=#{url},</if><if test="createBy != null ">createBy=#{createBy},</if><if test="createTime != null ">createTime=#{createTime},</if><if test="updateBy != null ">updateBy=#{updateBy},</if><if test="updateTime != null ">updateTime=#{updateTime},</if><if test="version != null ">version=#{version},</if><if test="isDeleted != null ">isDeleted=#{isDeleted},</if><if test="parentId != null ">parentId=#{parentId},</if><if test="type != null ">type=#{type},</if><if test="sort != null ">sort=#{sort},</if><if test="depth != null ">depth=#{depth},</if><if test="platform != null ">platform=#{platform},</if><if test="description != null ">description=#{description},</if><if test="status != null ">status=#{status},</if>	</trim> where id=#{id} and version = #{version}-1</update><!-- 删除记录 --><delete id="del" >	delete from permission where id = #{id}</delete><!-- 根据id查询  --><select id="get"   resultType="Permission"  parameterType="String">	select <include refid="columnList" /> 	from permission  p	where  p.id = #{id}  and p.isDeleted = false</select><!-- 列表总数--><select id="count" resultType="java.lang.Long" >	select count(1) 	from permission  p	<include refid="whereClause"/></select><!-- 查询page --><select id="findPage" resultType="Permission" >	select 	<include refid="columnList"/>	from permission p	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 模糊查询page --><select id="findLikePage" resultType="Permission" >	select 	<include refid="columnList"/>	from permission p	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询列表list --><select id="findList" resultType="Permission" >	select	<include refid="columnList"/>	from permission p	<include refid="whereClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!--模糊查询list--><select id="findLikeList" resultType="Permission" >	select	<include refid="columnList"/>	from permission p	<include refid="whereLikeClause"/>	<if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合条件的数据的id集合 --><select id="findIds" resultType="String">	select p.${idsColumn}	from permission p    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 查询符合模糊条件的数据的id集合 --><select id="findLikeIds" resultType="String">	select p.${idsColumn}	from permission p    <include refid="whereLikeClause"/>    <if test="orderByClause!=null">${orderByClause}</if></select><!-- 获取一个对象通过非id --><select id="one" resultType="Permission" >     select    <include refid="columnList"/>     from permission p    <include refid="whereClause"/>    <if test="orderByClause!=null">${orderByClause}</if>    limit 0,1</select><!--如果你想返回一个HashMap 就实现这个select标签--><select id="queryHashMap" resultType="java.util.HashMap"  parameterType="Object"></select>	<select id="findPermissions" resultType="Permission" parameterType="java.util.List">		select p.* from rolePermission rp		left join permission p on rp.permissionId = p.id		where rp.roleId in		<foreach item="roles" index="index" collection="list" open="(" separator="," close=")">			#{roles}		</foreach>		order by p.sort	</select></mapper>