<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:util="http://www.springframework.org/schema/util"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
							  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd"
	   default-lazy-init="true">

	<description>Shiro Configuration</description>

	<!-- Shiro's main business-tier object for web-enabled applications -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="jobShiroRealm" />
		<property name="cacheManager" ref="cacheManager" />
	</bean>


	<!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />

	<bean id="groupTypeFormAuthenticationFilter"
		  class="user.zc.shiro.GroupTypeFormAuthenticationFilter" />

	<!--声明算法类注入容器-->
	<bean id="authCredential" class="user.zc.shiro.AuthCredential" />

	<!-- 項目自定义的Realm -->
	<bean id="jobShiroRealm" class="user.zc.shiro.JobShiroRealm">
		<property name="cacheManager" ref="cacheManager" />
		<!-- 引入自定义加密算法 -->
		<property name="credentialsMatcher" ref="authCredential"/>
	</bean>

	<!-- Shiro Filter  authc 指定需要认证的uri  , anon 指定排除认证的uri-->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/loginMain" />
		<property name="successUrl" value="/indexMain" />
		<property name="unauthorizedUrl" value="/noauthc" />
		<property name="filters">
			<util:map>
				<entry key="authc" value-ref="groupTypeFormAuthenticationFilter" />
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
				/static/**/** = anon
				/toLogin = anon
				/loginMain = anon
				/** = authc
			</value>
		</property>
	</bean>

	<!-- 用户授权信息Cache -->
	<bean id="cacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />

	<!-- AOP式方法级权限检查 -->
	<bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		  depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>


</beans>